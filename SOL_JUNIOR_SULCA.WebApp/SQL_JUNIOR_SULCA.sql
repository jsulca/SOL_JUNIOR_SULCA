
--TODO: CREACION DE TABLAS
CREATE TABLE ALUMNO
(
	ID NUMBER(6) NOT NULL,
	
	CODIGO VARCHAR(20) NOT NULL,
	NOMBRE VARCHAR(200) NOT NULL,
	APELLIDO VARCHAR(200) NOT NULL,
	ESTADO NUMBER(1) NOT NULL
);

CREATE TABLE MATRICULA
(
	ID NUMBER(6) NOT NULL,
	ALUMNOID NUMBER(6) NOT NULL,
	SECCIONID NUMBER(6) NOT NULL,
	
	TIPO NUMBER(1) NOT NULL,
	REGISTRO DATE NOT NULL,
	ANULACION DATE NULL,
	ESTADO NUMBER(1) NOT NULL
);

CREATE TABLE CURSO
(
	ID NUMBER(6) NOT NULL,
	
	DESCRIPCION VARCHAR(400) NOT NULL,
	CREDITO NUMBER(4) NOT NULL
);

CREATE TABLE SECCION
(
	ID NUMBER(6) NOT NULL,
	CURSOID INT NOT NULL,
	
	DESCRIPCION VARCHAR(400) NOT NULL,
	VACANTE NUMBER(4) NOT NULL,
	MATRICULADO NUMBER(4) NOT NULL,
	ESTADO NUMBER(1) NOT NULL
);


--TODO: AGREGAR LLAVES PRIMARIAS
ALTER TABLE ALUMNO ADD CONSTRAINT PK_ALUMNO PRIMARY KEY (ID);
ALTER TABLE MATRICULA ADD CONSTRAINT PK_MATRICULA PRIMARY KEY (ID);
ALTER TABLE CURSO ADD CONSTRAINT PK_CURSO PRIMARY KEY (ID);
ALTER TABLE SECCION ADD CONSTRAINT PK_SECCION PRIMARY KEY (ID);

--TODO: AGREGAR LLAVES FORANEAS
ALTER TABLE MATRICULA ADD CONSTRAINT FK_MATRICULA_ALUMNO FOREIGN KEY (ALUMNOID) REFERENCES ALUMNO (ID);
ALTER TABLE MATRICULA ADD CONSTRAINT FK_MATRICULA_SECCION FOREIGN KEY (SECCIONID) REFERENCES SECCION (ID);
ALTER TABLE SECCION ADD CONSTRAINT FK_SECCION_CURSO FOREIGN KEY (CURSOID) REFERENCES CURSO (ID);


--TODO: CREAR SECUENCIAS
CREATE SEQUENCE ALUMNO_ID_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
CREATE SEQUENCE MATRICULA_ID_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
CREATE SEQUENCE CURSO_ID_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;
CREATE SEQUENCE SECCION_ID_SEQ START WITH 1 INCREMENT BY 1 NOCYCLE NOCACHE;


--TODO: CREAR DISPARADORES
CREATE TRIGGER ALUMNO_ID_TRG
BEFORE INSERT ON ALUMNO
FOR EACH ROW
BEGIN 
	SELECT ALUMNO_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE TRIGGER MATRICULA_ID_TRG
BEFORE INSERT ON MATRICULA
FOR EACH ROW
BEGIN 
	SELECT MATRICULA_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE TRIGGER CURSO_ID_TRG
BEFORE INSERT ON CURSO
FOR EACH ROW
BEGIN 
	SELECT CURSO_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

CREATE TRIGGER SECCION_ID_TRG
BEFORE INSERT ON SECCION
FOR EACH ROW
BEGIN 
	SELECT SECCION_ID_SEQ.NEXTVAL INTO :NEW.ID FROM DUAL;
END;

--TODO: REGISTRAR INFORMACIÃ“N BASE

INSERT INTO ALUMNO (CODIGO, NOMBRE, APELLIDO, ESTADO) VALUES ('ALU-000001', 'JUNIOR', 'SULCA', 1);
INSERT INTO ALUMNO (CODIGO, NOMBRE, APELLIDO, ESTADO) VALUES ('ALU-000002', 'ALAN', 'GARCIA', 1);
INSERT INTO ALUMNO (CODIGO, NOMBRE, APELLIDO, ESTADO) VALUES ('ALU-000003', 'JESUS', 'FIGUEROA', 1);
INSERT INTO ALUMNO (CODIGO, NOMBRE, APELLIDO, ESTADO) VALUES ('ALU-000004', 'PEDRO', 'CASTILLO', 1);
INSERT INTO ALUMNO (CODIGO, NOMBRE, APELLIDO, ESTADO) VALUES ('ALU-000005', 'OLLANTA', 'HUMALA', 1);

INSERT INTO CURSO (DESCRIPCION, CREDITO) VALUES ('CURSO 1', 2);
INSERT INTO CURSO (DESCRIPCION, CREDITO) VALUES ('CURSO 2', 2);
INSERT INTO CURSO (DESCRIPCION, CREDITO) VALUES ('CURSO 3', 3);
INSERT INTO CURSO (DESCRIPCION, CREDITO) VALUES ('CURSO 4', 5);
INSERT INTO CURSO (DESCRIPCION, CREDITO) VALUES ('CURSO 5', 6);

INSERT INTO SECCION (CURSOID, DESCRIPCION, VACANTE, MATRICULADO, ESTADO) VALUES (1, 'SECCION A', 4, 0, 1);
INSERT INTO SECCION (CURSOID, DESCRIPCION, VACANTE, MATRICULADO, ESTADO) VALUES (2, 'SECCION B', 1, 0, 1);
INSERT INTO SECCION (CURSOID, DESCRIPCION, VACANTE, MATRICULADO, ESTADO) VALUES (3, 'SECCION B', 3, 0, 1);
INSERT INTO SECCION (CURSOID, DESCRIPCION, VACANTE, MATRICULADO, ESTADO) VALUES (4, 'SECCION C', 2, 0, 1);


--TODO: BORRAR TABLAS Y SEQUENCIAS
DROP TABLE ALUMNO;
DROP TABLE CURSO;
DROP TABLE MATRICULA;
DROP TABLE SECCION;


DROP SEQUENCE ALUMNO_ID_SEQ;
DROP SEQUENCE MATRICULA_ID_SEQ;
DROP SEQUENCE CURSO_ID_SEQ;
DROP SEQUENCE SECCION_ID_SEQ;